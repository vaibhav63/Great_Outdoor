package com.cg.go.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cg.go.dao.CartRepository;
import com.cg.go.entity.CartItemEntity;
import com.cg.go.exception.CartException;
import com.cg.go.model.CartItemModel;
import com.cg.go.model.ProductModel;

@Service
public class CartServiceImpl implements CartService {

	@Autowired
	private CartRepository cartRepository;

	@Autowired
	private ProductService productService;


	@Override
	public List<CartItemEntity> findCartlist(String userId) {

		return cartRepository.findAllByUserId(userId);
	}

	@Override
	public CartItemEntity findCartItem(String productId, String userId) {

		return cartRepository.findCartItem(productId, userId);
	}

	@Override
	public CartItemEntity addCart(CartItemEntity cartItemEntity) throws CartException {

		if (cartItemEntity != null) {

			if (cartRepository.existsById(cartItemEntity.getCartId())) {

				throw new CartException("Cart Item Already Exists !!");
			} else {
				cartItemEntity = cartRepository.save(cartItemEntity);
			}
		}

		return cartItemEntity;
	}

	@Override
	public CartItemEntity updateCart(CartItemEntity cartItemEntity) throws CartException {

		if (cartItemEntity != null) {

			if (!cartRepository.existsById(cartItemEntity.getCartId())) {

				throw new CartException("Cart Item Does Not Exists !!");
			} else {
				cartItemEntity = cartRepository.save(cartItemEntity);
			}
		}

		return cartItemEntity;
	}

	@Override
	public void deleteCartItem(String productId, String userId) throws CartException {

		if (productId != null && userId != null) {

			CartItemEntity cartItemEntity = findCartItem(productId, userId);
			if (cartItemEntity != null) {
				cartRepository.deleteCartItem(userId, productId);
			} else {
				throw new CartException("Wishlist Item Does Not Exists !!");
			}
		} else {
			throw new CartException("Product Id OR User Id Is Null !!");
		}
	}

	@Override
	public void deleteCartlist(String userId) throws CartException {

		if (userId != null) {

			List<CartItemEntity> cartlist = findCartlist(userId);

			if (cartlist != null) {

				cartRepository.deleteCart(userId);
				;
			} else {
				throw new CartException("Cart Does Not Exists");
			}

		} else {
			throw new CartException("User Id For Deletion Is Null");
		}

	}

}
