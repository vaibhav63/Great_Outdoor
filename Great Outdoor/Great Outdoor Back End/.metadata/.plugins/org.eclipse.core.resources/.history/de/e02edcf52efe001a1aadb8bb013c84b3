package com.cg.go.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;

import com.cg.go.dao.SalesReportRepository;
import com.cg.go.entity.SalesReportEntity;
import com.cg.go.exception.SalesReportException;
import com.cg.go.model.SalesReportModel;

public class SalesReportSerivceImpl implements SalesReportService{

	@Autowired
	private SalesReportRepository salesReportRepository;
	
	private SalesReportModel of(SalesReportEntity source) {
		SalesReportModel result=null;
		if(source!=null) {
			result=new SalesReportModel();
			result.setSalesReportId(source.getSalesReportId());
	        result.setProductId(source.getProductId());
	        result.setProductName(source.getProductName());
	        result.setQuantitySold(source.getQuantitySold());
	        result.setTotalSale(source.getTotalSale());
		}
		return result;
	}
	
	
	private SalesReportEntity of(SalesReportModel source) {
		SalesReportEntity result=null;
		SalesReportModel tempModel=null;
		if(source!=null) {
			result=new SalesReportEntity();
			result.setSalesReportId(source.getSalesReportId());
	        result.setProductId(source.getProductId());
	        result.setProductName(source.getProductName());
	        if(salesReportRepository.existsByProductId(source.getProductId())) {
	        	tempModel=findSalesReportByProductId(source.getProductId());
	            result.setQuantitySold(source.getQuantitySold()+tempModel.getQuantitySold());
	            result.setTotalSale(source.getTotalSale()+tempModel.getTotalSale());
		      }else {
		    	    result.setQuantitySold(source.getQuantitySold());
		            result.setTotalSale(source.getTotalSale());
		      }
		}
		return result;
	}
	
	@Override
	public List<SalesReportModel> findAllSalesReport() {
		return salesReportRepository.findAll().stream()
				.map(entity -> of(entity))
				.collect(Collectors.toList());
				
				
	}

	@Override
	public SalesReportModel addSalesReport(SalesReportModel salesReportModel) {

		if(salesReportModel!=null) {
			
			if(salesReportRepository.existsByProductId(salesReportModel.getProductId())) {
				
				throw new SalesReportException("Sales Report Already Exists !!");
			}else {
				salesReportModel=of(salesReportRepository.save(of(salesReportModel)));
			}
		
		}
		
		return salesReportModel;
	}

	@Override
	public void updateProductReport(String productId, Integer quantitySold, double totalSales) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void deleteAllSalesReport() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void deleteSalesReportById(long salesReportId) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public SalesReportModel findSalesReportByProductId(String productId) {
		
	    return of(salesReportRepository.findByProductId(productId));
	}


	
}
