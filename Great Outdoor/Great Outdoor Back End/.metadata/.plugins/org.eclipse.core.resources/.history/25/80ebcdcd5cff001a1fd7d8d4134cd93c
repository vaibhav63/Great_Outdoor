package com.cg.go.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cg.go.dao.WishlistRepository;
import com.cg.go.entity.WishlistItemEntity;
import com.cg.go.exception.WishlistException;
import com.cg.go.model.ProductModel;
import com.cg.go.model.WishlistItemModel;


@Service
public class WishlistServiceImpl implements WishlistService {
	
	@Autowired
	private WishlistRepository wishlistRepository;
	
	@Autowired
	private ProductService productService;

	
	@Override
	public WishlistItemEntity addWishlistItem(WishlistItemEntity wishlistItem) throws WishlistException {
		
		if(wishlistItem !=null) {
			
			if(wishlistRepository.existsById(wishlistItem.getWishlistItemId())) {
				
				throw new WishlistException("Wishlist Item Already Exists !!");
			}else {
				wishlistItem= of(wishlistRepository.save(of(wishlistItem)));
			}
		}
		
		return wishlistItem;
	}
	
	@Override
	public List<WishlistItemEntity> findWishlist(String userId) {
		
		return wishlistRepository.findAllByUserId(userId);
	}
	
	@Override
	public WishlistItemModel findWishlistItem(String productId, String userId) {
		
		return of(wishlistRepository.findWishlistItem(productId, userId));
	}


	@Override
	public void deleteWishlistItem(String productId, String userId) throws WishlistException {

		if(productId!=null && userId!=null) {
			
			WishlistItemModel wishlistItem=findWishlistItem(productId, userId);
			if(wishlistItem!=null) {
				wishlistRepository.deleteWishlistItem(userId, productId);
			}else {
				throw new WishlistException("Wishlist Item Does Not Exists !!");
			}
			
		}else {
			throw new WishlistException("Product Id OR User Id Is Null !!");
		}
		
	} 

	@Override
	public void deleteWishlist(String userId) throws WishlistException {
		if(userId!=null) {
			
			List<WishlistItemModel> wishlist =findWishlist(userId);
			if(wishlist!=null) {
				
				wishlistRepository.deleteWishlist(userId);
			}else {
				 throw new WishlistException("Wishlist Does Not Exists");
			}
			
			
		}else {
			throw new WishlistException("User Id For Deletion Is Null");
		}
	}


	@Override
	public List<WishlistItemModel> findAllItems() {
		
		return wishlistRepository.findAll().stream()
				.map(entity -> of(entity))
				.collect(Collectors.toList());
	}


}
